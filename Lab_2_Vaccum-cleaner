class VacuumCleaner:
    def __init__(self):
        self.state = {
            "vacuum_pos": input("Enter the initial position of the vacuum cleaner (A or B): ").upper(),
            "room_A": input("Is Room A dirty or clean? ").lower(),
            "room_B": input("Is Room B dirty or clean? ").lower()
        }

    def show_state(self):
        print(f"Vacuum Position: {self.state['vacuum_pos']}, Room A: {self.state['room_A']}, Room B: {self.state['room_B']}")

    def is_clean(self):
        return self.state["room_A"] == "clean" and self.state["room_B"] == "clean"

    def move_right(self):
        if self.state["vacuum_pos"] == "A":
            self.state["vacuum_pos"] = "B"
            print("Moving to Room B")

    def move_left(self):
        if self.state["vacuum_pos"] == "B":
            self.state["vacuum_pos"] = "A"
            print("Moving to Room A")

    def suck(self):
        if self.state["vacuum_pos"] == "A":
            if self.state["room_A"] == "dirty":
                self.state["room_A"] = "clean"
                print("Cleaning Room A")
        elif self.state["vacuum_pos"] == "B":
            if self.state["room_B"] == "dirty":
                self.state["room_B"] = "clean"
                print("Cleaning Room B")

    def run(self):
        while not self.is_clean():
            self.show_state()
            if self.state["vacuum_pos"] == "A":
                if self.state["room_A"] == "dirty":
                    self.suck()
                else:
                    self.move_right()
            elif self.state["vacuum_pos"] == "B":
                if self.state["room_B"] == "dirty":
                    self.suck()
                else:
                    self.move_left()
        print("Both rooms are clean now!")
        self.show_state()


# Create Vacuum Cleaner object and run the simulation
vacuum = VacuumCleaner()
vacuum.run()
